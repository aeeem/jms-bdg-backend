{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"LoginRequestParameter": {
				"properties": {
					"noInduk": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"noInduk",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterRequestParameter": {
				"properties": {
					"noInduk": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"noInduk",
					"password",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCashRequestBody": {
				"properties": {
					"note": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"cash_type": {
						"type": "string",
						"enum": [
							"transfer",
							"cash"
						]
					},
					"transaction_date": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"note",
					"amount",
					"cash_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddDepositRequestParameter": {
				"properties": {
					"customer_id": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"is_transfer": {
						"type": "boolean"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"customer_id",
					"amount",
					"is_transfer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerRequestParameter": {
				"properties": {
					"name": {
						"type": "string"
					},
					"contact_number": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerUpdateRequestParameter": {
				"properties": {
					"name": {
						"type": "string"
					},
					"contact_number": {
						"type": "string"
					},
					"hutang": {
						"type": "number",
						"format": "double"
					},
					"piutang": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CreateEmployeeRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"noInduk": {
						"type": "string"
					},
					"birth_date": {
						"type": "string",
						"format": "date-time"
					},
					"phone_number": {
						"type": "string"
					},
					"role_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"noInduk",
					"phone_number",
					"role_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChangeEmployeeRole": {
				"properties": {
					"role_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"role_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PindahStockGudangRequestParameter": {
				"properties": {
					"stock_id": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"stock_id",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TambahStockGudangRequestParameter": {
				"properties": {
					"product_id": {
						"type": "number",
						"format": "double"
					},
					"vendor_id": {
						"type": "number",
						"format": "double"
					},
					"buy_price": {
						"type": "number",
						"format": "double"
					},
					"sell_price": {
						"type": "number",
						"format": "double"
					},
					"box_amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"product_id",
					"vendor_id",
					"buy_price",
					"sell_price",
					"box_amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"StockOpnameParameter": {
				"properties": {
					"stock_id": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"stock_id",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"StockPayload": {
				"properties": {
					"jumlahBox": {
						"type": "number",
						"format": "double"
					},
					"berat": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"jumlahBox",
					"berat"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductRequestParameter": {
				"properties": {
					"sku": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"vendorId": {
						"type": "number",
						"format": "double"
					},
					"tanggalMasuk": {
						"type": "string",
						"format": "date-time"
					},
					"hargaModal": {
						"type": "number",
						"format": "double"
					},
					"hargaJual": {
						"type": "number",
						"format": "double"
					},
					"stok": {
						"items": {
							"$ref": "#/components/schemas/StockPayload"
						},
						"type": "array"
					}
				},
				"required": [
					"sku",
					"name",
					"vendorId",
					"tanggalMasuk"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateProductParameter": {
				"properties": {
					"name": {
						"type": "string"
					},
					"vendorId": {
						"type": "number",
						"format": "double"
					},
					"tanggalMasuk": {
						"type": "string",
						"format": "date-time"
					},
					"hargaModal": {
						"type": "number",
						"format": "double"
					},
					"hargaJual": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"vendorId",
					"tanggalMasuk",
					"hargaModal",
					"hargaJual"
				],
				"type": "object",
				"additionalProperties": false
			},
			"StockMixProduct": {
				"properties": {
					"stock_id": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"stock_id",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MixedProductRequestParameter": {
				"properties": {
					"selectedStockID": {
						"type": "number",
						"format": "double"
					},
					"stock": {
						"items": {
							"$ref": "#/components/schemas/StockMixProduct"
						},
						"type": "array"
					}
				},
				"required": [
					"selectedStockID",
					"stock"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReturRequestParameter": {
				"properties": {
					"stock_id": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"stock_id",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReturCustomerRequestParameter": {
				"properties": {
					"stock_id": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"is_gudang": {
						"type": "boolean"
					}
				},
				"required": [
					"stock_id",
					"amount",
					"is_gudang"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateStockParameter": {
				"properties": {
					"amountBox": {
						"type": "number",
						"format": "double"
					},
					"weight": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"amountBox",
					"weight"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddStockBulkParameter": {
				"properties": {
					"stocks": {
						"items": {
							"$ref": "#/components/schemas/UpdateStockParameter"
						},
						"type": "array"
					}
				},
				"required": [
					"stocks"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionDetailRequestParameter": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double"
					},
					"stock_id": {
						"type": "number",
						"format": "double"
					},
					"sub_total": {
						"type": "number",
						"format": "double"
					},
					"box": {
						"type": "boolean"
					}
				},
				"required": [
					"amount",
					"stock_id",
					"sub_total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionRequestParameter": {
				"properties": {
					"expected_total_price": {
						"type": "number",
						"format": "double"
					},
					"actual_total_price": {
						"type": "number",
						"format": "double"
					},
					"customer_id": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"amount_paid": {
						"type": "number",
						"format": "double"
					},
					"deposit": {
						"type": "number",
						"format": "double"
					},
					"transaction_date": {
						"type": "string",
						"format": "date-time"
					},
					"use_deposit": {
						"type": "boolean"
					},
					"optional_discount": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"detail": {
						"items": {
							"$ref": "#/components/schemas/TransactionDetailRequestParameter"
						},
						"type": "array"
					},
					"packaging_cost": {
						"type": "number",
						"format": "double"
					},
					"is_transfer": {
						"type": "boolean"
					},
					"pay_debt": {
						"type": "boolean"
					},
					"sub_total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"expected_total_price",
					"actual_total_price",
					"amount_paid",
					"detail",
					"sub_total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeleteTransactionItemRequestParameter": {
				"properties": {
					"transaction_id": {
						"type": "number",
						"format": "double"
					},
					"stock_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"transaction_id",
					"stock_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionUpdateRequestParameter": {
				"properties": {
					"expected_total_price": {
						"type": "number",
						"format": "double"
					},
					"actual_total_price": {
						"type": "number",
						"format": "double"
					},
					"customer_id": {
						"type": "number",
						"format": "double"
					},
					"amount_paid": {
						"type": "number",
						"format": "double"
					},
					"deposit": {
						"type": "number",
						"format": "double"
					},
					"transaction_date": {
						"type": "string",
						"format": "date-time"
					},
					"detail": {
						"items": {
							"properties": {
								"box": {
									"type": "boolean"
								},
								"sub_total": {
									"type": "number",
									"format": "double"
								},
								"productId": {
									"type": "number",
									"format": "double"
								},
								"amount": {
									"type": "number",
									"format": "double"
								},
								"id": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"detail"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserParameter": {
				"properties": {
					"noInduk": {
						"type": "string"
					},
					"roles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"birthDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"phoneNumber": {
						"type": "string"
					}
				},
				"required": [
					"noInduk",
					"name",
					"phoneNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChangePasswordParameter": {
				"properties": {
					"newPassword": {
						"type": "string"
					}
				},
				"required": [
					"newPassword"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorRequestParameter": {
				"properties": {
					"name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"pic_name": {
						"type": "string"
					},
					"pic_phone_number": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"shipping_cost": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"code"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header",
				"flow": "implicit",
				"scopes": {
					"write:pets": "modify things",
					"read:pets": "read things"
				}
			}
		}
	},
	"info": {
		"title": ""
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/cash-flow/cash-out": {
			"post": {
				"operationId": "CreateCashOut",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Cashflow"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateCashRequestBody"
							}
						}
					}
				}
			}
		},
		"/api/cash-flow/cash-in": {
			"post": {
				"operationId": "CreateCashIn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Cashflow"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateCashRequestBody"
							}
						}
					}
				}
			}
		},
		"/api/customer": {
			"get": {
				"operationId": "GetAllCustomer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"read:customer"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateCustomer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"create:customer"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/customer/detail/{id}": {
			"get": {
				"operationId": "FindCustomerById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"read:customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/customer/search": {
			"get": {
				"operationId": "SearchCustomer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"read:customer"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/customer/deposit/{id}": {
			"get": {
				"operationId": "GetDeposit",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"read:customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/customer/deposit": {
			"post": {
				"operationId": "AddDeposit",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"create:customer"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddDepositRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/customer/debt/pay": {
			"post": {
				"operationId": "PayDebt",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"create:customer"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddDepositRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/customer/debt/{id}": {
			"get": {
				"operationId": "GetDebt",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"read:customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/customer/{id}": {
			"put": {
				"operationId": "UpdateCustomer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"update:customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerUpdateRequestParameter"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteCustomer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": [
							"delete:customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/pegawai": {
			"get": {
				"operationId": "GetAllEmployee",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Pegawai"
				],
				"security": [
					{
						"api_key": [
							"read:pegawai"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateEmployee",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Pegawai"
				],
				"security": [
					{
						"api_key": [
							"create:pegawai"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateEmployeeRequest"
							}
						}
					}
				}
			}
		},
		"/api/pegawai/{id}": {
			"put": {
				"operationId": "UpdateEmployee",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Pegawai"
				],
				"security": [
					{
						"api_key": [
							"update:pegawai"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateEmployeeRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEmployee",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Pegawai"
				],
				"security": [
					{
						"api_key": [
							"delete:pegawai"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "ChangeEmployeeRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Pegawai"
				],
				"security": [
					{
						"api_key": [
							"update:pegawai"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChangeEmployeeRole"
							}
						}
					}
				}
			}
		},
		"/api/pegawai/search": {
			"get": {
				"operationId": "SearchEmployee",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Pegawai"
				],
				"security": [
					{
						"api_key": [
							"read:customer"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/gudang": {
			"get": {
				"operationId": "GetStockGudang",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Gudang"
				],
				"security": [
					{
						"api_key": [
							"read:gudang"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "TambahStockGudang",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Gudang"
				],
				"security": [
					{
						"api_key": [
							"create:gudang"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TambahStockGudangRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/gudang/pindah-stok": {
			"post": {
				"operationId": "PindahStockGudang",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Gudang"
				],
				"security": [
					{
						"api_key": [
							"update:gudang"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/PindahStockGudangRequestParameter"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/api/opname": {
			"get": {
				"operationId": "GetAllOpnames",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Opname"
				],
				"security": [
					{
						"api_key": [
							"read:stock"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/opname/opname": {
			"post": {
				"operationId": "OpnameStock",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Opname"
				],
				"security": [
					{
						"api_key": [
							"update:stock"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/StockOpnameParameter"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/api/products": {
			"get": {
				"operationId": "GetAllProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"api_key": [
							"read:product"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"api_key": [
							"create:product"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/ProductRequestParameter"
								},
								"type": "array"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"api_key": [
							"update:product"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateProductParameter"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"api_key": [
							"delete:product"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/products/search": {
			"get": {
				"operationId": "SearchProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"api_key": [
							"read:product"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/products/add-campur": {
			"post": {
				"operationId": "CreateMixedProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"api_key": [
							"create:product"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MixedProductRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/report/daily": {
			"get": {
				"operationId": "GetDailyReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Report"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "date_param",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "type_cash",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/report/cash-flow": {
			"get": {
				"operationId": "GetCashFlow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Report"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "year",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "month",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "week",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/report/cash-report": {
			"get": {
				"operationId": "GetCashReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Report"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/api/report/supplier": {
			"get": {
				"operationId": "GetSupplierReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Report"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "month",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/retur": {
			"get": {
				"operationId": "GetListRetur",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Return"
				],
				"security": [
					{
						"api_key": [
							"read:stock"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/retur/vendor": {
			"post": {
				"operationId": "AddReturItemVendor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Return"
				],
				"security": [
					{
						"api_key": [
							"create:stock"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReturRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/retur/customer": {
			"post": {
				"operationId": "AddReturItemCustomer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Return"
				],
				"security": [
					{
						"api_key": [
							"create:stock"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReturCustomerRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/roles": {
			"get": {
				"operationId": "GetAllRoles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"api_key": [
							"read:role"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/statistic/dashboard": {
			"get": {
				"operationId": "GetDashboardStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Statistic"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/stock": {
			"get": {
				"operationId": "GetAllStock",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Stock"
				],
				"security": [
					{
						"api_key": [
							"read:stock"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/stock/toko": {
			"get": {
				"operationId": "GetStockToko",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Stock"
				],
				"security": [
					{
						"api_key": [
							"read:stock"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/stock/{id}": {
			"put": {
				"operationId": "UpdateStock",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Stock"
				],
				"security": [
					{
						"api_key": [
							"update:stock"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateStockParameter"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteStock",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Stock"
				],
				"security": [
					{
						"api_key": [
							"delete:stock"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/stock/search/{query}": {
			"get": {
				"operationId": "FindStock",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Stock"
				],
				"security": [
					{
						"api_key": [
							"read:stock"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/stock/bulk/{id}": {
			"post": {
				"operationId": "AddStockBulk",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Stock"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddStockBulkParameter"
							}
						}
					}
				}
			}
		},
		"/api/transaction": {
			"get": {
				"operationId": "GetAllTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"read:transaction"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "sort",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/transaction/search": {
			"get": {
				"operationId": "SearchTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"read:transaction"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/transaction/create": {
			"post": {
				"operationId": "CreateTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"create:transaction"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TransactionRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/transaction/{id}": {
			"get": {
				"operationId": "GetTransactionById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"read:transaction"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"update:transaction"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TransactionUpdateRequestParameter"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"delete:transaction"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/transaction/pending": {
			"post": {
				"operationId": "CreatePendingTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"create:transaction"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TransactionRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/transaction/pending/{id}": {
			"delete": {
				"operationId": "DeletePendingTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"create:transaction"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/transaction/pending/{transaction_id}": {
			"put": {
				"operationId": "UpdatePendingTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"update:transaction"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "transaction_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TransactionRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/transaction/pending/item": {
			"patch": {
				"operationId": "DeletePendingTransactionItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Transaction"
				],
				"security": [
					{
						"api_key": [
							"create:transaction"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeleteTransactionItemRequestParameter"
							}
						}
					}
				}
			}
		},
		"/api/user-permission/get-all": {
			"get": {
				"operationId": "GetAllUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"User Permission"
				],
				"security": [
					{
						"api_key": [
							"read:user"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/user-permission/create": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"User Permission"
				],
				"security": [
					{
						"api_key": [
							"create:user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"roles": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"roles",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/user-permission/update/{id}": {
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"User Permission"
				],
				"security": [
					{
						"api_key": [
							"update:user"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserParameter"
							}
						}
					}
				}
			}
		},
		"/api/user-permission/change-password/{id}": {
			"put": {
				"operationId": "ChangePassword",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"User Permission"
				],
				"security": [
					{
						"api_key": [
							"update:user"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChangePasswordParameter"
							}
						}
					}
				}
			}
		},
		"/api/user-permission/delete/{id}": {
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"User Permission"
				],
				"security": [
					{
						"api_key": [
							"delete:user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/vendor": {
			"get": {
				"operationId": "GetAllVendor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Vendor"
				],
				"security": [
					{
						"api_key": [
							"read:vendor"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "AddVendor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Vendor"
				],
				"security": [
					{
						"api_key": [
							"create:vendor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorRequestParameter"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateVendor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Vendor"
				],
				"security": [
					{
						"api_key": [
							"update:vendor"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorRequestParameter"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteVendor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Vendor"
				],
				"security": [
					{
						"api_key": [
							"delete:vendor"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/vendor/search": {
			"get": {
				"operationId": "FindVendor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Vendor"
				],
				"security": [
					{
						"api_key": [
							"read:vendor"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/server-status": {
			"get": {
				"operationId": "GetServerStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"version": {
											"type": "string"
										},
										"serverTime": {
											"type": "string"
										},
										"status": {
											"type": "string"
										}
									},
									"required": [
										"version",
										"serverTime",
										"status"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Server Status"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/server-status/routes": {
			"get": {
				"operationId": "GetServerRoutes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Server Status"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"securitydefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "access_token",
			"in": "header",
			"flow": "implicit",
			"scopes": {
				"write:pets": "modify things",
				"read:pets": "read things"
			}
		}
	}
}